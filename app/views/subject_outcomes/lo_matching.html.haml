
- content_for(:title, 'Match Old LOs to New LOs')
- content_for(:page_name, 'Match Old LOs to New LOs')
- content_for(:page_class, 'misc')

/ Header
.header-block
  .row
    .col-sm-1
    .col-sm-10
      %h1.h3.page-title.text-center
        %strong='Maintenance'
      %h2.h1.page-title.text-center
        %strong='Match Old LOs to New LOs'
    .col-sm-1

- if !@school.acronym == 'MOD'
  .row 'This is only allowed for the Model School'
- if !can?(:switch, School)
  .row 'This is only allowed for users who can see multiple schools'
- if !can?(:upload_lo_file, SubjectOutcome)
  .row 'You are not allowed to Bulk Upload Learning Outcomes'
- if !@school.has_flag?(School::GRADE_IN_SUBJECT_NAME)
  .row 'This school is not configured for Bulk Uploading Learning Outcomes'
.row{class: (@school.acronym == 'MOD' && can?(:switch, School) && can?(:upload_lo_file, SubjectOutcome) && @school.has_flag?(School::GRADE_IN_SUBJECT_NAME) ? '' : 'display-none')}
  .col-sm-1
  .col-sm-10
    .block.block-alt-style.full
      .block-title.text-center
        %h3
          ='Learning Outcomes Matching Process'
      .block-content-full.rounded-title-container
        = form_tag(lo_matching_subject_outcomes_path) do

          - valid_update = true
          %table.titled-table.table.table-bordered.table-condensed.remove-margin.manual-highlight.manual-break
            %thead.table-title
              %tr
                %th{colspan: 12}
                  = @match_subject.present? ? "Processing Only #{@match_subject.name}" : (@process_by_subject.present? ? "Processing #{@process_by_subject.name} of All Subjects" : "Processing All Subjects")
                  = # " - Matching Level: "
                  = # select_tag 'match_level', options_for_select(SubjectOutcomesHelper::MATCH_LEVEL_OPTIONS, @match_level)
                  %input{type: 'hidden', name: "school_id", value: @school.id}
                  - if @match_subject.present?
                    %input{type: 'hidden', name: "match_subject_id", value: @match_subject.id}
                  - if @process_by_subject.present?
                    %input{type: 'hidden', name: "process_subject_id", value: @process_by_subject.id}
              %tr
                %th= 'New Course'
                %th= 'New Grade'
                %th= 'New Marking Period'
                %th= 'New LO Code'
                %th= 'New Description'
                %th= 'Match'
                %th= 'Old Subject'
                %th= 'Old Marking Period'
                %th= 'Old LO Code'
                %th= 'Old Description'
            %tbody.tbody-body
              - prior_new_rec_num = 0
              - highlight_class = ''
              - @pairs_filtered.each_with_index do |set, ix|
                - rx = set[0]
                - ry = set[1]
                - match = set[2]
                - # Rails.logger.debug("++++ pairs_filtered ----  rx: #{rx.inspect} ---- ry: #{ry.inspect} ---- match: #{match.inspect}")
                - # set up alternate old record highlighting
                - if prior_new_rec_num == 0
                  - prior_new_rec_num = ry[SubjectOutcomesHelper::COL_REC_ID]
                - if prior_new_rec_num != ry[SubjectOutcomesHelper::COL_REC_ID]
                  - prior_new_rec_num = ry[SubjectOutcomesHelper::COL_REC_ID]
                  - highlight_class = (highlight_class == 'on' ? '' : 'on')
                  - break_class = 'break'
                - else
                  - break_class = ''
                - pair_subject_id = rx[SubjectOutcomesHelper::COL_SUBJECT_ID]
                - pair_subject_id = ry[SubjectOutcomesHelper::COL_SUBJECT_ID] if !pair_subject_id.present?
                - pair_subject_id_i = Integer(pair_subject_id) rescue -1

                - hide_subject_class = @process_by_subject.present? ? (@process_by_subject.id != pair_subject_id_i ? 'display-none' : '') : ''
                - prior_old_rec_num = rx[SubjectOutcomesHelper::COL_DB_ID]
                - prior_old_code = rx[SubjectOutcomesHelper::DB_OUTCOME_CODE]
                - new_rec_id = ry[SubjectOutcomesHelper::COL_REC_ID]
                - lo_name = rx[:lo_code].present? ? rx[:lo_code] : (ry[:lo_code].present? ? ry[:lo_code] : ry[SubjectOutcomesHelper::COL_REC_ID])
                - if hide_subject_class.blank?
                  %tr{ class: "#{highlight_class} #{break_class}", data: {displayed_pair: "pair_#{pair_subject_id}_#{prior_old_rec_num}_#{new_rec_id}"}}
                    - deact_class = (rx[:active] == false ? 'deactivated ' : '')
                    - # error_class = (rx[SubjectOutcomesHelper::PARAM_ACTION] == 'Mismatch' || ry[SubjectOutcomesHelper::PARAM_ACTION] == 'Mismatch') ? 'ui-error' : ''
                    - error_class = (![''].include?(rx[SubjectOutcomesHelper::PARAM_ACTION]) || !['', 'Add'].include?(ry[SubjectOutcomesHelper::PARAM_ACTION])) ? 'ui-error' : ''
                    %td=ry[SubjectOutcomesHelper::COL_COURSE]
                    %td=ry[SubjectOutcomesHelper::COL_GRADE]
                    %td=ry[SubjectOutcomesHelper::COL_MP_BITMAP]
                    %td=ry[SubjectOutcomesHelper::COL_OUTCOME_CODE]
                    %td=ry[SubjectOutcomesHelper::COL_OUTCOME_NAME]
                    %td.text-center{class: "#{error_class}"}
                      - valid_update = false if !['=', '+'].include?(ry[:action].to_s)
                      - is_add = false #ry[:action].present? && ry[:action] == :'+' ? true : false
                      - is_equal = false # ry[:action].present? && ry[:action] == :'=' ? true : false
                      - is_matched = ry[:matched].present? && (ry[:matched] == prior_old_code || ry[:matched] == '-1')
                      %label{for: "selections[#{lo_name}_#{new_rec_id}]"}=rx[:action].present? ? rx[:action].to_s : '??'
                      %span='*'*match[:total_match]
                      %span=match[:lo_code]
                      = # radio_button_tag "selections[#{lo_name}]", "#{new_rec_id}", (is_add || is_equal || is_matched), id: "selections[#{lo_name}_#{new_rec_id}]"
                      - if false # is_matched
                        %br
                        %label{for: "selections[#{lo_name}_#{new_rec_id}]"}='<-'
                        = radio_button_tag "selections[#{rx[:lo_code]}]", "-1", false, id: "selections[#{lo_name}_-1]"
                    %td{class: "#{deact_class}"}=rx[:subject_name]
                    %td{class: "match-field-#{match[:mp_match]} #{deact_class}"}=rx[:mp]
                    %td{class: "similar-field-#{match[:code_match]+1} #{deact_class}"}=rx[:lo_code]
                    %td{class: "similar-field-#{match[:desc_match]} #{deact_class}"}=rx[:desc]
          .row
            - @records.each_with_index do |rec, ix|
              - pair_subject_id = rec[SubjectOutcomesHelper::COL_SUBJECT_ID]
              - new_rec_id = rec[SubjectOutcomesHelper::COL_REC_ID]
              %span{data: {hidden_pair: "pair_#{pair_subject_id}_#{}_#{new_rec_id}"}}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::PARAM_ACTION}]]", value: rec[SubjectOutcomesHelper::PARAM_ACTION]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_REC_ID}]", value: new_rec_id}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_SUBJECT_ID}]", value: pair_subject_id}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_COURSE}]", value: rec[SubjectOutcomesHelper::COL_COURSE]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_GRADE}]", value: rec[SubjectOutcomesHelper::COL_GRADE]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_MP_BITMAP}]", value: rec[SubjectOutcomesHelper::COL_MP_BITMAP]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_OUTCOME_CODE}]", value: rec[SubjectOutcomesHelper::COL_OUTCOME_CODE]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_OUTCOME_NAME}]", value: rec[SubjectOutcomesHelper::COL_OUTCOME_NAME]}
          .row.text-center
            .btn.btn.btn-default
              %a#upload-again{href: upload_lo_file_subject_outcomes_path, title: 'Upload Learning Outcomes'}= "UPLOAD"
            - if valid_update
              %button#save_matches.btn.btn-primary.cancel{type: "submit", title: 'Set Matches', name: 'submit_action', value: 'set_matches'}='Save Matches'
            - if @allow_save_all
              %button#save_all.btn.btn-primary.cancel{type: "submit", title: 'Save All LOs', name: 'submit_action', value: 'save_all'}='SAVE ALL'
.col-sm-1



