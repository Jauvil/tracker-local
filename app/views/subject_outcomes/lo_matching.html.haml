
- content_for(:title, 'Match Old LOs to New LOs')
- content_for(:page_name, 'Match Old LOs to New LOs')
- content_for(:page_class, 'misc')

/ Header
.header-block
  .row
    .col-sm-1
    .col-sm-10
      %h1.h3.page-title.text-center
        %strong='Maintenance'
      %h2.h1.page-title.text-center
        %strong='Match Old LOs to New LOs'
    .col-sm-1

- if !@school.acronym == 'MOD'
  .row 'This is only allowed for the Model School'
- if !can?(:switch, School)
  .row 'This is only allowed for users who can see multiple schools'
- if !can?(:upload_lo_file, SubjectOutcome)
  .row 'You are not allowed to Bulk Upload Learning Outcomes'
- if !@school.has_flag?(School::GRADE_IN_SUBJECT_NAME)
  .row 'This school is not configured for Bulk Uploading Learning Outcomes'
- sum_los_to_print = @new_los_to_present.count + @old_los_to_present.count
- print_eject_class = ''
- print_full_width_class = ''
- if sum_los_to_print > 8
  - print_eject_class = 'page-break-before'
  - print_full_width_class = 'print-page-full-width'
%h3.text-center.ui-error='Note: When save is done, all unmatched new records will be added, and all unmatched old records will be deactivated.'

.row{class: (@school.acronym == 'MOD' && can?(:switch, School) && can?(:upload_lo_file, SubjectOutcome) && @school.has_flag?(School::GRADE_IN_SUBJECT_NAME) ? "" : "display-none")}
  .col-sm-1
  .col-sm-10
    .block.block-alt-style.full
      .block-title.text-center
        - if @present_by_subject.present?
          %h3= "Learning Outcomes Matching Process of #{@present_by_subject.name} of All Subjects"
        - elsif @match_subject.present?
          %h3= "Learning Outcomes Matching Process of Only #{@match_subject.name}"
      .block-content-full.rounded-title-container
        = form_tag(lo_matching_subject_outcomes_path) do
          - valid_update = true
          .row
            .col-sm-6{class: " #{print_full_width_class}"}
              %table.titled-table.table.table-bordered.table-condensed.remove-margin.manual-highlight.manual-break
                %thead.table-title
                  %tr
                    %th{colspan: 12}
                      = 'New Learning Outcomes'
                      %input{type: 'hidden', name: "school_id", value: @school.id}
                      - if @subject_to_show.present?
                        %input{type: 'hidden', name: "subject_id", value: @subject_to_show.id}
                      - if @present_by_subject.present?
                        %input{type: 'hidden', name: "present_by_subject_id", value: @present_by_subject.id}
                      - if @total_errors.present?
                        %input{type: 'hidden', name: "total_errors", value: @total_errors}
                      - if @total_updates.present?
                        %input{type: 'hidden', name: "total_updates", value: @total_updates}
                      - if @total_adds.present?
                        %input{type: 'hidden', name: "total_adds", value: @total_adds}
                      - if @total_deactivates.present?
                        %input{type: 'hidden', name: "total_deactivates", value: @total_deactivates}
                      - if @count_updated_subjects.present?
                        %input{type: 'hidden', name: "count_updated_subjects", value: @count_updated_subjects}
                  %tr
                    %th{title: 'New Marking Period'}= 'New MP'
                    %th= 'New Code'
                    %th= 'New Description'
                    %th= 'Match'
                %tbody.tbody-body
                  - @new_los_to_present.each do |new_rec|
                    - subject_id = new_rec[:subject_id]
                    - hide_subject_class = @present_by_subject.present? ? (@present_by_subject.id != subject_id ? 'display-none' : '') : ''
                    - new_rec_id = new_rec[:rec_id]
                    - exact_match = new_rec[:exact_match]
                    - if hide_subject_class.blank?
                      %tr.break{data: {new_rec_id: "#{new_rec[:rec_id]}"}}
                        - error_class = (new_rec[:error].present? ? 'ui-error' : '')
                        %td.new_mp=new_rec[:mp]
                        %td.new_lo_code=new_rec[:lo_code]
                        %td.new_lo_desc=new_rec[:desc]
                        %td.text-center
                          - if exact_match.present?
                            %span=exact_match[:descr]
                            %input{type: 'hidden', name: "selections[#{new_rec_id}]", value: exact_match[:db_id]}
                          - else
                            = select_tag("selections[#{new_rec_id}]", options_for_select([[],[]] + new_rec[:matches].map{|k,v| [v[:descr], v[:db_id]]}))
                          - if new_rec[:error].present?
                            %p{class: "#{error_class}"}=new_rec[:error]
            .col-sm-6{class: "#{print_eject_class} #{print_full_width_class}"}
              %table.titled-table.table.table-bordered.table-condensed.remove-margin.manual-highlight.manual-break
                %thead.table-title
                  %tr
                    %th{colspan: 12}
                      = 'Old Learning Outcomes'
                      %input{type: 'hidden', name: "school_id", value: @school.id}
                      - if @match_subject.present?
                        %input{type: 'hidden', name: "match_subject_id", value: @match_subject.id}
                      - if @present_by_subject.present?
                        %input{type: 'hidden', name: "process_subject_id", value: @present_by_subject.id}
                  %tr
                    %th{title: 'Identifier for this Learning Outcome for Matching to a New Learning Outcome'}= 'Match ID'
                    %th{title: 'Old Marking Period'}= 'Old MP'
                    %th= 'Old Code'
                    %th= 'Old Description'
                %tbody.tbody-body
                  - @old_los_to_present.each do |old_rec|
                    - subject_id = old_rec[SubjectOutcomesHelper::COL_SUBJECT_ID]
                    - subject_id_i = Integer(subject_id) rescue -1
                    - hide_subject_class = @present_by_subject.present? ? (@present_by_subject.id != subject_id_i ? 'display-none' : '') : ''
                    - if hide_subject_class.blank?
                      %tr.break{data: {old_db_id: "#{old_rec[:db_id]}"}}
                        - if (old_rec[:active] == false)
                          - deact_class = 'inactive '
                        - elsif (old_rec[:exact_match].present?)
                          - deact_class = 'gray-out '
                        - else
                          - deact_class = ''
                        - error_class = (old_rec[:error].present? ? 'ui-error' : '')
                        %td{class: "match_id #{deact_class}"}=old_rec[:match_id]
                        %td{class: "old_mp #{deact_class}"}=old_rec[:mp]
                        %td{class: "old_lo_code #{deact_class}"}=old_rec[:lo_code]
                        %td{class: "old_lo_desc #{deact_class}"}=old_rec[:desc]
          .row
            - @records.each_with_index do |rec, ix|
              - pair_subject_id = rec[:subject_id]
              - new_rec_id = rec[:rec_id]
              %span{data: {hidden_pair: "pair_#{pair_subject_id}_#{}_#{new_rec_id}"}}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::PARAM_ACTION}]]", value: rec[SubjectOutcomesHelper::PARAM_ACTION]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_REC_ID}]", value: new_rec_id}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_SUBJECT_ID}]", value: pair_subject_id}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_COURSE}]", value: rec[SubjectOutcomesHelper::COL_COURSE]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_GRADE}]", value: rec[SubjectOutcomesHelper::COL_GRADE]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_MP_BITMAP}]", value: rec[SubjectOutcomesHelper::COL_MP_BITMAP]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_OUTCOME_CODE}]", value: rec[SubjectOutcomesHelper::COL_OUTCOME_CODE]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_OUTCOME_NAME}]", value: rec[SubjectOutcomesHelper::COL_OUTCOME_NAME]}
          .row.text-center
            %h4='Note: When save is done, all unmatched new records will be added, and all unmatched old records will be deactivated.'
          .row.ui-error
            - @error_details.each do |k,err|
              .row="#{k} - #{err}"

          .row.text-center
            %h3.ui-error='Warning: Subject needs to be reconciled all at once !'
          .row.text-center
            .btn.btn.btn-default
              %a#upload-again{href: upload_lo_file_subject_outcomes_path, title: 'Upload Learning Outcomes'}= "UPLOAD"
            - if !@allow_save_all && !@subject_errors # && !@no_update
              %button#save_matches.btn.btn-primary.cancel{type: "submit", title: 'Set Matches', name: 'submit_action', value: 'set_matches'}='Reconcile Subject'
            - if @allow_save_all && @errors.count == 0
              %button#save_all.btn.btn-primary.cancel{type: "submit", title: 'Save All LOs', name: 'submit_action', value: 'save_all'}='SAVE ALL'
            - if @present_by_subject.present?
              %button#skip_subject.btn.btn-primary.cancel{type: "submit", title: 'Skip This Subject', name: 'submit_action', value: 'skip'}='Skip'
            %button#cancel.btn.btn-primary.cancel{type: "submit", title: 'Cancel Update for this Subject', name: 'submit_action', value: 'cancel'}='Cancel'
          - if @prior_subject_name.present?
            .row.text-center
              %span#prior_subj=@prior_subject_name
              %span=" counts: Updates - "
              %span#count_updates=@count_updates
              %span=", Adds - "
              %span#count_adds=@count_adds
              %span=", Deactivates - "
              %span#count_deactivates=@count_deactivates
              %span=", Errors - "
              %span#count_errors=@count_errors
            .row.text-center
              %span=" counts: Subjects Updated - "
              %span#count_updated_subjects=@count_updated_subjects
              %span=", Updates - "
              %span#total_updates=@total_updates
              %span=", Adds - "
              %span#total_adds=@total_adds
              %span=", Deactivates - "
              %span#total_deactivates=@total_deactivates
              %span=", Errors - "
              %span#total_errors=@total_errors
.col-sm-1



