
- content_for(:title, 'Match Old LOs to New LOs')
- content_for(:page_name, 'Match Old LOs to New LOs')
- content_for(:page_class, 'misc')

/ Header
.header-block
  .row
    .col-sm-1
    .col-sm-10
      %h1.h3.page-title.text-center
        %strong='Maintenance'
      %h2.h1.page-title.text-center
        %strong='Match Old LOs to New LOs'
    .col-sm-1

- if !@school.acronym == 'MOD'
  .row 'This is only allowed for the Model School'
- if !can?(:switch, School)
  .row 'This is only allowed for users who can see multiple schools'
- if !can?(:upload_lo_file, SubjectOutcome)
  .row 'You are not allowed to Bulk Upload Learning Outcomes'
- if !@school.has_flag?(School::GRADE_IN_SUBJECT_NAME)
  .row 'This school is not configured for Bulk Uploading Learning Outcomes'
.row{class: (@school.acronym == 'MOD' && can?(:switch, School) && can?(:upload_lo_file, SubjectOutcome) && @school.has_flag?(School::GRADE_IN_SUBJECT_NAME) ? '' : 'display-none')}
  .col-sm-1
  .col-sm-10
    .block.block-alt-style.full
      .block-title.text-center
        %h3= 'Learning Outcomes Matching Process of ' + (@match_subject.present? ? "Only #{@match_subject.name}" : (@process_by_subject.present? ? "#{@process_by_subject.name} of All Subjects" : "All Subjects"))
      .block-content-full.rounded-title-container
        = form_tag(lo_matching_subject_outcomes_path) do
          - valid_update = true
          .row
            .col-sm-6
              %table.titled-table.table.table-bordered.table-condensed.remove-margin.manual-highlight.manual-break
                %thead.table-title
                  %tr
                    %th{colspan: 12}
                      = 'New Learning Outcomes'
                      %input{type: 'hidden', name: "school_id", value: @school.id}
                      - if @match_subject.present?
                        %input{type: 'hidden', name: "match_subject_id", value: @match_subject.id}
                      - if @process_by_subject.present?
                        %input{type: 'hidden', name: "process_subject_id", value: @process_by_subject.id}
                  %tr
                    %th{title: 'New Marking Period'}= 'New MP'
                    %th= 'New Code'
                    %th= 'New Description'
                    %th= 'Match'
                %tbody.tbody-body
                  - @new_los_to_process.each do |new_rec|
                    - subject_id = new_rec[:subject_id]
                    - hide_subject_class = @process_by_subject.present? ? (@process_by_subject.id != subject_id ? 'display-none' : '') : ''
                    - new_rec_id = new_rec[:rec_id]
                    - exact_match = new_rec[:exact_match]
                    - if hide_subject_class.blank?
                      %tr.break
                        - error_class = (new_rec[:error].present? ? 'ui-error' : '')
                        %td.new_mp=new_rec[:mp]
                        %td.new_lo_code=new_rec[:lo_code]
                        %td.new_lo_desc=new_rec[:desc]
                        %td.text-center
                          - if exact_match.present?
                            %span=exact_match[:descr]
                            %input{type: 'hidden', name: "selections[#{new_rec_id}]", value: exact_match[:key]}
                          - else
                            = select_tag("selections[#{new_rec_id}]", options_for_select([[],[]] + new_rec[:matches].map{|k,v| [v[:descr], v[:key]]}))
                          - if new_rec[:error].present?
                            %span{class: "#{error_class}"}=new_rec[:error]
            .col-sm-6
              %table.titled-table.table.table-bordered.table-condensed.remove-margin.manual-highlight.manual-break
                %thead.table-title
                  %tr
                    %th{colspan: 12}
                      = 'Old Learning Outcomes'
                      %input{type: 'hidden', name: "school_id", value: @school.id}
                      - if @match_subject.present?
                        %input{type: 'hidden', name: "match_subject_id", value: @match_subject.id}
                      - if @process_by_subject.present?
                        %input{type: 'hidden', name: "process_subject_id", value: @process_by_subject.id}
                  %tr
                    %th{title: 'Identifier for this Learning Outcome for Matching to a New Learning Outcome'}= 'Match ID'
                    %th{title: 'Old Marking Period'}= 'Old MP'
                    %th= 'Old Code'
                    %th= 'Old Description'
                %tbody.tbody-body
                  - @old_los_to_process.each do |old_rec|
                    - subject_id = old_rec[SubjectOutcomesHelper::COL_SUBJECT_ID]
                    - subject_id_i = Integer(subject_id) rescue -1
                    - hide_subject_class = @process_by_subject.present? ? (@process_by_subject.id != subject_id_i ? 'display-none' : '') : ''
                    - if hide_subject_class.blank?
                      %tr.break
                        - deact_class = ( (old_rec[:active] == false || old_rec[:exact_match].present?) ? 'deactivated ' : '')
                        - error_class = (old_rec[:error].present? ? 'ui-error' : '')
                        %td{class: "match_id #{deact_class}"}=old_rec[:match_id]
                        %td{class: "old_mp #{deact_class}"}=old_rec[:mp]
                        %td{class: "old_lo_code #{deact_class}"}=old_rec[:lo_code]
                        %td{class: "old_lo_desc #{deact_class}"}=old_rec[:desc]
          .row
            - @records.each_with_index do |rec, ix|
              - pair_subject_id = rec[SubjectOutcomesHelper::COL_SUBJECT_ID]
              - new_rec_id = rec[SubjectOutcomesHelper::COL_REC_ID]
              %span{data: {hidden_pair: "pair_#{pair_subject_id}_#{}_#{new_rec_id}"}}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::PARAM_ACTION}]]", value: rec[SubjectOutcomesHelper::PARAM_ACTION]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_REC_ID}]", value: new_rec_id}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_SUBJECT_ID}]", value: pair_subject_id}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_COURSE}]", value: rec[SubjectOutcomesHelper::COL_COURSE]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_GRADE}]", value: rec[SubjectOutcomesHelper::COL_GRADE]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_MP_BITMAP}]", value: rec[SubjectOutcomesHelper::COL_MP_BITMAP]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_OUTCOME_CODE}]", value: rec[SubjectOutcomesHelper::COL_OUTCOME_CODE]}
                %input{type: 'hidden', name: "r[#{ix}][#{SubjectOutcomesHelper::COL_OUTCOME_NAME}]", value: rec[SubjectOutcomesHelper::COL_OUTCOME_NAME]}
          .row.text-center
            .btn.btn.btn-default
              %a#upload-again{href: upload_lo_file_subject_outcomes_path, title: 'Upload Learning Outcomes'}= "UPLOAD"
            - if valid_update && !@allow_save_all
              %button#save_matches.btn.btn-primary.cancel{type: "submit", title: 'Set Matches', name: 'submit_action', value: 'set_matches'}='Save Matches'
            - if @allow_save_all
              %button#save_all.btn.btn-primary.cancel{type: "submit", title: 'Save All LOs', name: 'submit_action', value: 'save_all'}='SAVE ALL'
            - if @process_by_subject.present?
              %button#skip_subject.btn.btn-primary.cancel{type: "submit", title: 'Skip This Subject', name: 'submit_action', value: 'skip'}='Skip'
.col-sm-1



